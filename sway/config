###  _____      ____ _ _   _ 
### / __\ \ /\ / / _` | | | |
### \__ \\ V  V / (_| | |_| |
### |___/ \_/\_/ \__,_|\__, |
###                    |___/ 

# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# You preferred browser
set $browser firefox
# file browser
set $file_browser lf
# set wallpaper
set $path /home/a0z1/Pictures/Wallpapers
set $wallpaper $path/$( ls "$path" | shuf -n1 )
# set lock image
set $lock_image $wallpaper
# Your preferred application launcher

# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu bemenu-run -p "Select program:"

## disable xwayland
#xwayland disable

# Show gaps between windows
gaps inner 8
gaps outer 10

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $wallpaper fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration

# Example configuration:

exec swayidle -w \
    timeout 600 'swaylock -f -s fill -i $lock_image' \
    timeout 605 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -f -s fill -i $lock_image'


# This will lock your screen after 10 minutes of inactivity, then turn off
# your displays after another 5 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
# NB: if you add the option --locked to a binding, that binding will
# be executed even in lock mode

### Use the script for launching wallpaper and idle session
#exec /home/a0z1/.config/sway/wallpapers.sh

### Input configuration

input "1739:52713:06CBCDC2:00_06CB:CDE9_Touchpad" {
   dwt enabled
   tap enabled
   natural_scroll enabled
   middle_emulation enabled
}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Keyboard layout
input "type:keyboard" {
    xkb_layout gb
}

###################
# Custom Settings #
###################

# border of windows; options: normal, pixel/none
default_border pixel 4

### Window properties
# make R calculator pop up in floating window
for_window [app_id="R"] floating enable
# make file_browser file manager pop up in floating window
for_window [app_id="file_browser"] floating enable
# make cmus pop up in floating window
for_window [app_id="cmus"] floating enable
# make calendar yada yada yada
for_window [app_id="calendar"] floating enable
# mutt
for_window [app_id="mutt"] floating enable
# for insert mode editing in qutebrowser
for_window [app_id="qb_insert"] floating enable
# launch newsboat
for_window [app_id="newsboat"] floating enable
# floating terminal
for_window [app_id="terminal"] floating enable

# if I am opening a imv instance, go into floating mode
for_window [app_id="imv"] floating enable
for_window [app_id="imv"] resize set 900 600
for_window [app_id="imv"] move position 984px 0px
# same for mpv
for_window [app_id="mpv"] floating enable
for_window [app_id="mpv"] resize set 900 600
for_window [app_id="mpv"] move position 984px 0px

# to return to the previous workspace, press $mod+current_workspace
workspace_auto_back_and_forth yes

# Force focus wrapping. NB you gotta focus parent of split containers to move between upper layers of the tree
focus_wrapping force


####################
# Execute at start #
####################

# start clipboard manager to make clipboard's content shared
# across windows
exec wl-paste -t text --watch clipman store

# start notification service daemon
exec mako

# enable screencasting in wayland
exec /home/a0z1/.config/sway/screencast.sh

# enable color temperature control
exec gammastep

# start protonmail
exec /home/a0z1/.config/sway/start_protonbridge.sh

# to enable VPN
exec nm-applet

######################
# Custom Keybindings #
######################

# Screen brightness
bindsym --locked XF86MonBrightnessUp exec light -A 5
bindsym --locked XF86MonBrightnessDown exec light -U 5


### Volume Control
# Output
bindsym --locked XF86AudioMute exec "pactl set-sink-mute @DEFAULT_SINK@ toggle"
bindsym --locked XF86AudioLowerVolume exec "pactl set-sink-volume @DEFAULT_SINK@ -5%"
bindsym --locked XF86AudioRaiseVolume exec "pactl set-sink-volume @DEFAULT_SINK@ +5%"

# Input
bindsym --locked XF86AudioMicMute exec "pactl set-source-mute 1 toggle"


# activate protonvpn
bindsym $mod+apostrophe exec /home/a0z1/.local/bin/vpn.sh
bindsym $mod+Shift+apostrophe exec /home/a0z1/.local/bin/vpn_disconnect.sh

# Turn off screen
bindsym --locked $mod+Delete exec "/home/a0z1/.config/sway/backlight.sh"


# Launch an instance of default browser
bindsym $mod+i exec $browser
bindsym $mod+Shift+i exec netsurf
bindsym $mod+Control+i exec /home/a0z1/.local/bin/brave_wl

# Launch passbemenu
bindsym $mod+p exec "/home/a0z1/.local/bin/passbemenu"
# launch password_generator
bindsym $mod+g exec "/home/a0z1/.local/bin/pass_generator"

# newsboat
bindsym $mod+Shift+slash exec "$term --app-id newsboat newsboat"
# cmus
bindsym $mod+slash exec "$term --app-id cmus cmus"
# R calculator
bindsym $mod+equal exec "$term --app-id R R --no-save"
# file_browser
bindsym $mod+o exec "$term --app-id file_browser $file_browser"
# mutt
bindsym $mod+m exec "$term --app-id mutt neomutt"
# calendar
bindsym $mod+c exec "$term --app-id calendar calcurse"
# terminal
bindsym $mod+Shift+Return exec "$term --app-id terminal"

# Lock screen
bindsym $mod+Ctrl+l exec "swaylock -f -s fill -i $lock_image"

# shutdown/restart
bindsym $mod+Shift+Delete exec "turn_off"

# make currently focused floating window sticky (drag it with you into other workspaces)
bindsym $mod+Shift+s sticky toggle

# move into the next workspace
bindsym $mod+period workspace next
bindsym $mod+comma workspace prev

# view clipboard history
bindsym $mod+y exec "clipman pick -t bemenu"
# clear clipboard history
bindsym $mod+Shift+y exec "clipman clear -a"

# mount and unmount drives
bindsym $mod+u exec bemenumount
bindsym $mod+Shift+u exec bemenuumount

# change wallpaper randomly
bindsym $mod+Escape output * bg $wallpaper fill

# define swaynag mode
# that defines keybinding for interacting
# with swaynag. When swaynagmode is launched,
# it automatically enters this mode
set $nag exec swaynagmode
mode "nag" {
    bindsym Ctrl+d         mode "default"
    bindsym Ctrl+c         $nag --exit
    bindsym q              $nag --exit
    bindsym Escape         $nag --exit

    bindsym Return         $nag --confirm

    bindsym Tab            $nag --select prev
    bindsym Shift+Tab      $nag --select next

    bindsym Left           $nag --select next
    bindsym Right          $nag --select prev

    bindsym Up             $nag --select next
    bindsym Down           $nag --select prev
}


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c exec pkill status.sh; reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e $nag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg "exec pkill status.sh"; swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Record screen or make screenshots
#
mode "capture" {
    
    # Take screenshots
    # whole screen
    bindsym $mod+p exec "/usr/bin/grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') $(xdg-user-dir PICTURES)/Screenshots/$(date +'%Y-%m-%d-%H%M%S_screenshot.png')"
    # selected area
    bindsym $mod+s exec /usr/bin/grim -g "$( slurp )" $(xdg-user-dir PICTURES)/Screenshots/$(date +'%Y-%m-%d-%H%M%S_screenshot.png')

    # record screen
    bindsym $mod+r exec /usr/bin/wf-recorder -a -f $(xdg-user-dir VIDEOS)/Screencasts/$(date +'%Y-%m-%d-%H%M%S_screencast.mp4')
    # stop recording
    bindsym $mod+Shift+r exec pkill -SIGINT wf-recorder

    # download music
    bindsym $mod+m exec "/home/a0z1/.local/bin/download_music_clipboard"
    # download video
    bindsym $mod+v exec "/home/a0z1/.local/bin/download_video_clipboard"
    # play last video
    bindsym $mod+w exec "/home/a0z1/.local/bin/watch_most_recent"

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+n mode "capture"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
#this is an alternative statusbar
#swaybar_command waybar
    position top
    # set fonts
    font Mononoki Nerd Font Bold 13
    # set separator
    #separator_symbol ""

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command exec ~/.config/sway/swaybar/status.sh

    colors {
        statusline #ffffff
        background #323232
        focused_workspace #5f0000 #5f0000 #ffffff
        inactive_workspace #000000 #000000 #5c5c5c
    }

    mode dock

    ## hidden mode
    #mode hide 
    #hidden_state hide
    #modifier $mod
}

client.focused #5f0000 #5f0000 #ffffff #ff0000

include /etc/sway/config.d/*


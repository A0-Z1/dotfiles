###  _               _              
### | |__   __ _ ___| |__  _ __ ___ 
### | '_ \ / _` / __| '_ \| '__/ __|
### | |_) | (_| \__ \ | | | | | (__ 
### |_.__/ \__,_|___/_| |_|_|  \___|
                                

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:/usr/lib/surfraw:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:/usr/lib/surfraw:$PATH"
fi
export PATH

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions

# set vis as editor
export EDITOR='/usr/bin/nvim'
export VISUAL="$EDITOR"

# Functions
#####################################################################

# git branch in prompt
function parse_git_branch {
    git branch 2> /dev/null | sed -E '/^\*/!d;s/^\*\s(.*)/ î‚ \1/'
}

# quickly edit scripts
function myscripts {
    local script=$( find /home/a0z1/.local/bin -type f | fzf )
    [ -n "$script" ] && $EDITOR $script
}

# quickly edit configuration files
function config {
    local conf=$( find /home/a0z1/.config -type f | fzf )
    [ -n "$conf" ] && $EDITOR $conf
}

# move a script from incubator to .local/bin
function birth {
    local born=$( basename -s ".sh" $1 )
    cp $1 /home/a0z1/.local/bin/$born
}

# quickly edit incubator files
function incubator {
    local incub=$( find /home/a0z1/.local/incubator/ -type f | fzf )
    [ -n "$incub" ] && $EDITOR $incub
}

# browse through saved newsboat articles
# and open one using w3m
function articles {
    local article=$( ls /home/a0z1/.newsboat/articles/ | fzf )
    [ -n "$article" ] && w3m "/home/a0z1/.newsboat/articles/$article"
}

# returns most used commands in recent history
function frequent_commands {
    history | awk '{if ($2 == "sudo") print $3; else print $2}' | awk 'FS="|" {print $1}' | sort | uniq -c | sort -n | tail -15
}

# activate python virtual environment
function activate {

    [ ! -n "$1" ] && return 1
    local env_path="$PYVENV_PATH/$1"
    if [ -d "$env_path" ]; then
        source "$env_path/bin/activate"
    else
        echo "That is not a virtual environment!"
    fi
}

# remove python virtual environment
function remove {

    [ ! -n "$1" ] && return 1
    local env_path="$PYVENV_PATH/$1"
    if [ -d "$env_path" ]; then
        read -p "Do you really want to delete $1? [y/N] " answer
        [[ "$answer" =~ "y" || "$answer" =~ "Y" ]] && rm -rf "$env_path"
    else
        echo "That is not a virtual environment!"
    fi
}

function create {
    # if nothing typed
    [ ! -n "$1" ] && return 1
    # else create environment
    local env_path="$PYVENV_PATH/$1"
    python -m venv "$env_path"
    # install requests and beautifulsoup4
    # to make pysearch work
    source "$env_path/bin/activate"
    pip install requests beautifulsoup4 > /dev/null
    echo "Environment created in $env_path"
    echo "Type"
    echo -e "\t \$ pyvenv activate $1\n"
    echo "to activate the environment"
    echo "Type"
    echo -e "\t \$ deactivate\n"
    echo "to deactivate it"
    echo "Use"
    echo -e "\t \$ pysearch 'package'\n"
    echo "to query PyPi repository"
}

function list {
    echo "Current environments:"
    for env in $( ls $PYVENV_PATH ); do
        echo -e "\t- $env"
    done
    echo
}

function option {
    echo -e "-h, --help\n\tPrint this help and exit"
    echo -e "list\n\tList existing environments"
    echo -e "activate\n\tActivate an environment"
    echo -e "create\n\tCreate an environment"
    echo -e "remove\n\tRemove an environment"
}

function pyvenv {

    case $1 in
        create)
            create $2
            ;;

        activate)
            activate $2
            ;;

        list)
            list
            ;;

        remove)
            remove $2
            ;;
        -h)
            option
            ;;
        --help)
            option
            ;;

        *)
            echo "Unknown option"
            ;;
    esac
}

function w3m {
    if [ -z "$@" ]; then
        command w3m https://lite.duckduckgo.com/lite/
    else
        command w3m "$@"
    fi
}

# prompt
__osc7 () {
  printf '\033]7;file://%s%s\033\\' "${HOSTNAME}" "${PWD}"
}

__prompt_command() {
  local pwd='~'
  [ "$PWD" != "$HOME" ] && pwd=${PWD/#$HOME\//\~\/}
  pwd="${pwd//[[:cntrl:]]}"
  printf '\033]0;%s@%s:%s\033\\' "${USER}" "${HOSTNAME%%.*}" "${pwd}"
  __osc7
}

#####################################################################

# Aliases
#####################################################################

# alias for neomutt
alias mutt="neomutt"

# alias for calcurse
alias calendar="calcurse"

# enable colors for ls
alias ls='ls --color=auto'
#enable colors for grep
alias grep='grep --color=auto'

# shortcut for ls -l
alias ll="ls -l"

# shortcut for lua5.3
alias lua="lua5.3"

# shortcut to get to incubators
alias cdi="cd /home/a0z1/.local/incubator/"

# quickly go to .local/bin
alias cdb="cd /home/a0z1/.local/bin"

# quickly go to config
alias cdc="cd /home/a0z1/.config"

# quickly add urls for RSS feeds
alias rss_url="nvim /home/a0z1/.newsboat/urls"

# ask if you want to delete something
alias rm="rm -i"

# alias for screencasting (with audio)
alias screencast="wf-recorder -a"

# alias for passmenu to use bemenu instead
alias passmenu="/home/a0z1/.local/bin/passbemenu"

# alias for brave to use wayland
alias brave="brave --enable-features=UseOzonePlatform --ozone-platform=wayland"

# alias for info
alias info="info --vi-keys"

# alias for elvis
alias ddg="duckduckgo"
alias aw="archwiki"

# alias for nvim
alias v="nvim"

# use nvim for less
alias viss="/usr/share/nvim/runtime/macros/less.sh"

#####################################################################


# Environment Variables
#####################################################################


# path for renv to source local packages; in particular I am setting this variable
# so that when I call renv::install("nvimcom"), it will find it immediately; have
# a look at https://rstudio.github.io/renv/articles/local-sources.html. BTW: if you need
# to update nvimcom, just go to ~/.local.share/nvim/plugged/Nvim-R/R/ and run R CMD build nvimcom,
# then copy the resulting tarball in the local_packages
export RENV_PATHS_LOCAL="/home/a0z1/R/local_packages"

# set gpg configuration file
export GNUPGHOME=/home/a0z1/.config/gpg

export PROMPT_COMMAND="__prompt_command"
export PS1='\[\033[1;36m\]\[\033[1;32m\]\W\[\033[1;33m\]$(parse_git_branch) \[\033[0;34m\]> \[\033[0;00m\]'
export PS2='\[\033[0;34m\]> \[\033[0;00m\]'
export PS4='\[033\[0;34m\]+ \[\033[0;00m\]'

# set user main email
export EMAIL="drumondlorenzo@protonmail.com"

# You should always add the following lines to your .bashrc or whatever initialization file is used for all shell invocations:
GPG_TTY=$(tty)
# It is important that this environment variable always reflects the output of the tty command.  For W32 systems this option is not required.
export GPG_TTY

# fzf by default starts in fullscreen mode, but you can make it start below the cursor with --height option.
# Also, check out --reverse and --layout options if you prefer "top-down" layout instead of the default "bottom-up" layout.
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'

# settings for bemenu
export BEMENU_BACKEND=wayland
export BEMENU_OPTS='-w -H 25 --fn "Mononoki Nerd Font 16" --tf=#afaf87 --ff=#eeeeee --sf=#eeeeee --nf=#bbbbbb --nb=#222222 --hf=#eeeeee --hb=#5f0000 --list 10 --bottom --scrollbar=autohide --scf=#5f0000'

# enable wayland for Firefox
export MOZ_ENABLE_WAYLAND=1

# extend HISTORY to 1000
export HISTSIZE=2000

# some environment variables for sway
export XDG_SESSION_TYPE=wayland
export XDG_SESSION_DESKTOP=sway
export XDG_CURRENT_DESKTOP=sway

# python virtual environment path
export PYVENV_PATH="/home/a0z1/.venv"

# browser
export BROWSER="firefox"
# text browser
export TEXT_BROWSER="w3m"
# pager
export PAGER="less"

# use nvim -d instead of vimdiff with pacdiff
export DIFFPROG="nvim -d"

#####################################################################

# Enable fuzzy finding (fzf)
[[ -f "/home/a0z1/.config/fzf/fzf.bash" ]] && . /home/a0z1/.config/fzf/fzf.bash

## enable vim editing mode
#set -o vi
## use ble.sh to enable syntax hihghlighting in bash
#source ~/.local/share/blesh/ble.sh
